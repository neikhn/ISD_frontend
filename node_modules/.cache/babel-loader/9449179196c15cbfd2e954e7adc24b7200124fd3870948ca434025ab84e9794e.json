{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adore\\\\Documents\\\\GitHub\\\\ISD-final\\\\frontEnd\\\\src\\\\AuthContext\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(null);\n  const login = newToken => {\n    setToken(newToken);\n  };\n  const logout = () => {\n    setToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","token","login","logout","AuthProvider","children","_s","setToken","newToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/adore/Documents/GitHub/ISD-final/frontEnd/src/AuthContext/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface AuthContextType {\r\n  token: string | null;\r\n  login: (token: string) => void;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  const login = (newToken: string) => {\r\n    setToken(newToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnE,MAAMC,WAAW,gBAAGL,aAAa,CAAkB;EACjDM,KAAK,EAAE,IAAI;EACXC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;EACfC,MAAM,EAAEA,CAAA,KAAM,CAAC;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAwC,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMK,KAAK,GAAIM,QAAgB,IAAK;IAClCD,QAAQ,CAACC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAML,MAAM,GAAGA,CAAA,KAAM;IACnBI,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAET,KAAK;MAAEC,KAAK;MAAEC;IAAO,CAAE;IAAAE,QAAA,EACnDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAR,EAAA,CAlBaF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAmBzB,OAAO,MAAMY,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrB,UAAU,CAACI,WAAW,CAAC;AAAA;AAACiB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}